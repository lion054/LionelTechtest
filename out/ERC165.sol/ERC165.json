{"abi":[{"type":"function","name":"supportsInterface","inputs":[{"name":"interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@aave/=lib/@aave/\",\":@chainlink/contracts/=lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/\",\":@openzeppelin/=lib/@openzeppelin/\",\":@openzeppelin/contracts/=lib/@openzeppelin/contracts/\",\":chainlink-brownie-contracts/=lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/\",\":chainlink/=lib/chainlink/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/@openzeppelin/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":foundry-chainlink-toolkit/=lib/foundry-chainlink-toolkit/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x7404609edd2defc12d93cba0f26be9dfa3f270b42ab1e402ee0ca3ad559a69fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c29c7797e3e0d725b04111297a4584f8f7babedb95e9d43ab7cf8c297188aaa5\",\"dweb:/ipfs/QmT5cUB79eCoZGzJFdo3ZyWZd7nudxbbQMMB7atiA8sZ7Y\"]},\"lib/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x6c534182213c28d01c8f51c4152901c9626ca7c29cc41d59a2c5434cf90c3f5b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13e3d86c0bc24c52207ab1552debaff1b6e8e18fc2df04f13798f3d540a7736f\",\"dweb:/ipfs/QmP6U4vTrYUXnur4sUu8CfmnUh3kCRkttVCtWkGoaQ2hym\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"stateMutability":"view","type":"function","name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@aave/=lib/@aave/","@chainlink/contracts/=lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/","@openzeppelin/=lib/@openzeppelin/","@openzeppelin/contracts/=lib/@openzeppelin/contracts/","chainlink-brownie-contracts/=lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/","chainlink/=lib/chainlink/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/@openzeppelin/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","foundry-chainlink-toolkit/=lib/foundry-chainlink-toolkit/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/@openzeppelin/contracts/utils/introspection/ERC165.sol":"ERC165"},"evmVersion":"paris","libraries":{}},"sources":{"lib/@openzeppelin/contracts/utils/introspection/ERC165.sol":{"keccak256":"0x7404609edd2defc12d93cba0f26be9dfa3f270b42ab1e402ee0ca3ad559a69fd","urls":["bzz-raw://c29c7797e3e0d725b04111297a4584f8f7babedb95e9d43ab7cf8c297188aaa5","dweb:/ipfs/QmT5cUB79eCoZGzJFdo3ZyWZd7nudxbbQMMB7atiA8sZ7Y"],"license":"MIT"},"lib/@openzeppelin/contracts/utils/introspection/IERC165.sol":{"keccak256":"0x6c534182213c28d01c8f51c4152901c9626ca7c29cc41d59a2c5434cf90c3f5b","urls":["bzz-raw://13e3d86c0bc24c52207ab1552debaff1b6e8e18fc2df04f13798f3d540a7736f","dweb:/ipfs/QmP6U4vTrYUXnur4sUu8CfmnUh3kCRkttVCtWkGoaQ2hym"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/@openzeppelin/contracts/utils/introspection/ERC165.sol","id":3867,"exportedSymbols":{"ERC165":[3866],"IERC165":[3878]},"nodeType":"SourceUnit","src":"117:822:18","nodes":[{"id":3844,"nodeType":"PragmaDirective","src":"117:24:18","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":3846,"nodeType":"ImportDirective","src":"145:38:18","nodes":[],"absolutePath":"lib/@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","nameLocation":"-1:-1:-1","scope":3867,"sourceUnit":3879,"symbolAliases":[{"foreign":{"id":3845,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3878,"src":"153:7:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":3866,"nodeType":"ContractDefinition","src":"679:258:18","nodes":[{"id":3865,"nodeType":"FunctionDefinition","src":"786:148:18","nodes":[],"body":{"id":3864,"nodeType":"Block","src":"868:66:18","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3857,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3852,"src":"886:11:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3859,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3878,"src":"906:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$3878_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$3878_$","typeString":"type(contract IERC165)"}],"id":3858,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"901:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"901:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$3878","typeString":"type(contract IERC165)"}},"id":3861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"915:11:18","memberName":"interfaceId","nodeType":"MemberAccess","src":"901:25:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"886:40:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3856,"id":3863,"nodeType":"Return","src":"879:47:18"}]},"baseFunctions":[3877],"documentation":{"id":3850,"nodeType":"StructuredDocumentation","src":"722:58:18","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"795:17:18","parameters":{"id":3853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3852,"mutability":"mutable","name":"interfaceId","nameLocation":"820:11:18","nodeType":"VariableDeclaration","scope":3865,"src":"813:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3851,"name":"bytes4","nodeType":"ElementaryTypeName","src":"813:6:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"812:20:18"},"returnParameters":{"id":3856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3855,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3865,"src":"862:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3854,"name":"bool","nodeType":"ElementaryTypeName","src":"862:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"861:6:18"},"scope":3866,"stateMutability":"view","virtual":true,"visibility":"public"}],"abstract":true,"baseContracts":[{"baseName":{"id":3848,"name":"IERC165","nameLocations":["707:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":3878,"src":"707:7:18"},"id":3849,"nodeType":"InheritanceSpecifier","src":"707:7:18"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":3847,"nodeType":"StructuredDocumentation","src":"187:490:18","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"linearizedBaseContracts":[3866,3878],"name":"ERC165","nameLocation":"697:6:18","scope":3867,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":18}